/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *  strict-local
 * @format
 */
'use strict';

var _inheritsLoose2 = require("@babel/runtime/helpers/interopRequireDefault")(require("@babel/runtime/helpers/inheritsLoose"));

/**
 * @internal
 *
 * Instances of these are made available via `RelayNetworkLayer.sendQueries`.
 */
var RelayQueryRequest =
/*#__PURE__*/
function (_Deferred) {
  (0, _inheritsLoose2["default"])(RelayQueryRequest, _Deferred);

  function RelayQueryRequest(query) {
    var _this;

    _this = _Deferred.call(this) || this;
    _this._printedQuery = null;
    _this._query = query;
    return _this;
  }
  /**
   * @public
   *
   * Gets a string name used to refer to this request for printing debug output.
   */


  var _proto = RelayQueryRequest.prototype;

  _proto.getDebugName = function getDebugName() {
    var name = this._query.getName();

    return this._query.isDeferred() ? name + ' (DEFERRED)' : name;
  };
  /**
   * @public
   *
   * Gets a unique identifier for this query. These identifiers are useful for
   * assigning response payloads to their corresponding queries when sent in a
   * single GraphQL request.
   */


  _proto.getID = function getID() {
    return this._query.getID();
  };

  _proto._getPrintedQuery = function _getPrintedQuery() {
    var printedQuery = this._printedQuery;

    if (printedQuery == null) {
      printedQuery = this._query instanceof require("./RelayQuery").OSSQuery ? require("./printRelayOSSQuery")(this._query) : require("./printRelayQuery")(this._query);
      this._printedQuery = printedQuery;
    }

    return printedQuery;
  };
  /**
   * @public
   *
   * Gets the variables used by the query. These variables should be serialized
   * and sent in the GraphQL request.
   */


  _proto.getVariables = function getVariables() {
    return this._getPrintedQuery().variables;
  };
  /**
   * @public
   *
   * Gets a string representation of the GraphQL query.
   */


  _proto.getQueryString = function getQueryString() {
    return this._getPrintedQuery().text;
  };
  /**
   * @public
   * @unstable
   */


  _proto.getQuery = function getQuery() {
    return this._query;
  };

  return RelayQueryRequest;
}(require("fbjs/lib/Deferred"));

module.exports = RelayQueryRequest;