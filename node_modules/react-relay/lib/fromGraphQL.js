/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *  strict-local
 * @format
 */
'use strict';

/**
 * @internal
 *
 * Converts GraphQL nodes to RelayQuery nodes.
 */
var fromGraphQL = {
  Field: function Field(query) {
    var node = createNode(query, require("./RelayQuery").Field);
    !(node instanceof require("./RelayQuery").Field) ? process.env.NODE_ENV !== "production" ? require("fbjs/lib/invariant")(false, 'fromGraphQL.Field(): Expected a GraphQL field node.') : require("fbjs/lib/invariant")(false) : void 0;
    return node;
  },
  Fragment: function Fragment(query) {
    var node = createNode(query, require("./RelayQuery").Fragment);
    !(node instanceof require("./RelayQuery").Fragment) ? process.env.NODE_ENV !== "production" ? require("fbjs/lib/invariant")(false, 'fromGraphQL.Fragment(): Expected a GraphQL fragment node.') : require("fbjs/lib/invariant")(false) : void 0;
    return node;
  },
  Query: function Query(query) {
    var node = createNode(query, require("./RelayQuery").Root);
    !(node instanceof require("./RelayQuery").Root) ? process.env.NODE_ENV !== "production" ? require("fbjs/lib/invariant")(false, 'fromGraphQL.Query(): Expected a root node.') : require("fbjs/lib/invariant")(false) : void 0;
    return node;
  },
  Operation: function Operation(query) {
    var node = createNode(query, require("./RelayQuery").Operation);
    !(node instanceof require("./RelayQuery").Operation) ? process.env.NODE_ENV !== "production" ? require("fbjs/lib/invariant")(false, 'fromGraphQL.Operation(): Expected a mutation/subscription node.') : require("fbjs/lib/invariant")(false) : void 0;
    return node;
  }
};

function createNode(query, desiredType) {
  var variables = {};

  var route = require("./RelayMetaRoute").get('$fromGraphQL');

  return desiredType.create(query, route, variables);
}

module.exports = fromGraphQL;