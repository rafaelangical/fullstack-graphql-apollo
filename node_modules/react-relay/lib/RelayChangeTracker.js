/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *  strict-local
 * @format
 */
'use strict';

/**
 * @internal
 *
 * Keeps track of records that have been created or updated; used primarily to
 * record changes during the course of a `write` operation.
 */
var RelayChangeTracker =
/*#__PURE__*/
function () {
  function RelayChangeTracker() {
    this._created = {};
    this._updated = {};
  }
  /**
   * Record the creation of a record.
   */


  var _proto = RelayChangeTracker.prototype;

  _proto.createID = function createID(recordID) {
    this._created[recordID] = true;
  };
  /**
   * Record an update to a record.
   */


  _proto.updateID = function updateID(recordID) {
    if (!this._created.hasOwnProperty(recordID)) {
      this._updated[recordID] = true;
    }
  };
  /**
   * Determine if the record has any changes (was created or updated).
   */


  _proto.hasChange = function hasChange(recordID) {
    return !!(this._updated[recordID] || this._created[recordID]);
  };
  /**
   * Determine if the record was created.
   */


  _proto.isNewRecord = function isNewRecord(recordID) {
    return !!this._created[recordID];
  };
  /**
   * Get the ids of records that were created/updated.
   */


  _proto.getChangeSet = function getChangeSet() {
    if (process.env.NODE_ENV !== "production") {
      return {
        created: Object.freeze(this._created),
        updated: Object.freeze(this._updated)
      };
    }

    return {
      created: this._created,
      updated: this._updated
    };
  };

  return RelayChangeTracker;
}();

module.exports = RelayChangeTracker;