/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 */
'use strict';

function createFragmentSpecResolver(context, containerName, fragments, props, callback) {
  if (process.env.NODE_ENV !== "production") {
    var fragmentNames = Object.keys(fragments);
    fragmentNames.forEach(function (fragmentName) {
      var propValue = props[fragmentName];
      process.env.NODE_ENV !== "production" ? require("fbjs/lib/warning")(propValue !== undefined, 'createFragmentSpecResolver: Expected prop `%s` to be supplied to `%s`, but ' + 'got `undefined`. Pass an explicit `null` if this is intentional.', fragmentName, containerName) : void 0;
    });
  }

  return new (require("./RelayModernFragmentSpecResolver"))(context, fragments, props, callback);
}

module.exports = {
  areEqualSelectors: require("./RelayModernSelector").areEqualSelectors,
  createFragmentSpecResolver: createFragmentSpecResolver,
  createOperationDescriptor: require("./RelayModernOperationDescriptor").createOperationDescriptor,
  getDataIDsFromObject: require("./RelayModernSelector").getDataIDsFromObject,
  getFragment: require("./RelayModernGraphQLTag").getFragment,
  getPaginationFragment: require("./RelayModernGraphQLTag").getPaginationFragment,
  getRefetchableFragment: require("./RelayModernGraphQLTag").getRefetchableFragment,
  getRequest: require("./RelayModernGraphQLTag").getRequest,
  getSelector: require("./RelayModernSelector").getSelector,
  getSelectorList: require("./RelayModernSelector").getSelectorList,
  getSelectorsFromObject: require("./RelayModernSelector").getSelectorsFromObject,
  getVariablesFromObject: require("./RelayModernSelector").getVariablesFromObject,
  isFragment: require("./RelayModernGraphQLTag").isFragment,
  isRequest: require("./RelayModernGraphQLTag").isRequest
};