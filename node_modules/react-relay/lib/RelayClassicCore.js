/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *  strict-local
 * @format
 */
'use strict';

function createFragmentSpecResolver(context, containerName, fragments, props, callback) {
  return new (require("./RelayFragmentSpecResolver"))(context, fragments, props, callback);
}
/**
 * The classic implementation of the `RelayCore` interface defined in
 * `RelayEnvironmentTypes`.
 */


module.exports = {
  areEqualSelectors: require("./RelaySelector").areEqualSelectors,
  createFragmentSpecResolver: createFragmentSpecResolver,
  createOperationDescriptor: require("./RelayOperationDescriptor").createOperationDescriptor,
  getDataIDsFromObject: require("./RelaySelector").getDataIDsFromObject,
  getFragment: require("./RelayGraphQLTag").getClassicFragment,
  getRequest: require("./RelayGraphQLTag").getClassicOperation,
  getSelector: require("./RelaySelector").getSelector,
  getSelectorList: require("./RelaySelector").getSelectorList,
  getSelectorsFromObject: require("./RelaySelector").getSelectorsFromObject,
  getVariablesFromObject: require("./RelaySelector").getVariablesFromObject,
  isFragment: require("./RelayGraphQLTag").isClassicFragment,
  isRequest: require("./RelayGraphQLTag").isClassicOperation
};