{"version":3,"sources":["../src/cli.ts"],"names":["androidPriorityOptions","unknown","alias","boolean","default","describe","verbose","debug","info","warn","error","fatal","silent","iosPriorityOptions","argv","_","platform","filter","args","yargs","usage","command","demandCommand","option","type","example","help","version","selectedAndroidPriorities","Boolean","selectedIosPriorities","createFilter","appId","tags","regexes","map","value","RegExp","patterns","emitter","priority","AndroidPriority","DEBUG","IosPriority","DEFAULT","on","entry","process","stdout","write","terminate","console","log","exit"],"mappings":";;AAAA;;AACA;;AAUA;;AAEA;;;;AAGA,MAAMA,sBAAsB,GAAG;AAC7BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,CADA;AAEPC,IAAAA,OAAO,EAAE,IAFF;AAGPC,IAAAA,OAAO,EAAE,KAHF;AAIPC,IAAAA,QAAQ,EAAE;AAJH,GADoB;AAO7BC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,CADA;AAEPC,IAAAA,OAAO,EAAE,IAFF;AAGPC,IAAAA,OAAO,EAAE,KAHF;AAIPC,IAAAA,QAAQ,EAAE;AAJH,GAPoB;AAa7BE,EAAAA,KAAK,EAAE;AACLL,IAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,CADF;AAELC,IAAAA,OAAO,EAAE,IAFJ;AAGLC,IAAAA,OAAO,EAAE,KAHJ;AAILC,IAAAA,QAAQ,EAAE;AAJL,GAbsB;AAmB7BG,EAAAA,IAAI,EAAE;AACJN,IAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,CADH;AAEJC,IAAAA,OAAO,EAAE,IAFL;AAGJC,IAAAA,OAAO,EAAE,KAHL;AAIJC,IAAAA,QAAQ,EAAE;AAJN,GAnBuB;AAyB7BI,EAAAA,IAAI,EAAE;AACJP,IAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,CADH;AAEJC,IAAAA,OAAO,EAAE,IAFL;AAGJC,IAAAA,OAAO,EAAE,KAHL;AAIJC,IAAAA,QAAQ,EAAE;AAJN,GAzBuB;AA+B7BK,EAAAA,KAAK,EAAE;AACLR,IAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,CADF;AAELC,IAAAA,OAAO,EAAE,IAFJ;AAGLC,IAAAA,OAAO,EAAE,KAHJ;AAILC,IAAAA,QAAQ,EAAE;AAJL,GA/BsB;AAqC7BM,EAAAA,KAAK,EAAE;AACLT,IAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,CADF;AAELC,IAAAA,OAAO,EAAE,IAFJ;AAGLC,IAAAA,OAAO,EAAE,KAHJ;AAILC,IAAAA,QAAQ,EAAE;AAJL,GArCsB;AA2C7BO,EAAAA,MAAM,EAAE;AACNV,IAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,CADD;AAENC,IAAAA,OAAO,EAAE,IAFH;AAGNC,IAAAA,OAAO,EAAE,KAHH;AAINC,IAAAA,QAAQ,EAAE;AAJJ;AA3CqB,CAA/B;AAmDA,MAAMQ,kBAAkB,GAAG;AACzBN,EAAAA,KAAK,EAAE;AACLL,IAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,CADF;AAELC,IAAAA,OAAO,EAAE,IAFJ;AAGLC,IAAAA,OAAO,EAAE,KAHJ;AAILC,IAAAA,QAAQ,EAAE;AAJL,GADkB;AAOzBG,EAAAA,IAAI,EAAE;AACJN,IAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,CADH;AAEJC,IAAAA,OAAO,EAAE,IAFL;AAGJC,IAAAA,OAAO,EAAE,KAHL;AAIJC,IAAAA,QAAQ,EAAE;AAJN,GAPmB;AAazBK,EAAAA,KAAK,EAAE;AACLR,IAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,CADF;AAELC,IAAAA,OAAO,EAAE,IAFJ;AAGLC,IAAAA,OAAO,EAAE,KAHJ;AAILC,IAAAA,QAAQ,EAAE;AAJL;AAbkB,CAA3B;;AAqBA,MAAM;AACJS,EAAAA,IAAI,EAAE;AACJC,IAAAA,CAAC,EAAE,CAACC,QAAD,EAAWC,MAAX,CADC;AAEJ,OAAGC;AAFC;AADF,IAKFC,eACDC,KADC,CACK,gCADL,EAEDC,OAFC,CAEO,SAFP,EAEkB,SAFlB,EAE6BF,KAAK,IAClCA,KAAK,CACFE,OADH,CAEI,gBAFJ,EAGI,+BAHJ,EAIIrB,sBAJJ,EAMGqB,OANH,CAOI,aAPJ,EAQI,kDARJ,EASIrB,sBATJ,EAWGqB,OAXH,CAYI,oBAZJ,EAaI,mCAbJ,EAcIrB,sBAdJ,EAgBGqB,OAhBH,CAiBI,uBAjBJ,EAkBI,+CAlBJ,EAoBGA,OApBH,CAoBW,KApBX,EAoBkB,eApBlB,EAoBmCrB,sBApBnC,EAqBGsB,aArBH,CAqBiB,CArBjB,EAsBGC,MAtBH,CAsBU,UAtBV,EAsBsB;AAClBC,EAAAA,IAAI,EAAE,QADY;AAElBnB,EAAAA,QAAQ,EAAE;AAFQ,CAtBtB,EA0BGoB,OA1BH,CA2BI,sBA3BJ,EA4BI,iDA5BJ,EA8BGA,OA9BH,CA+BI,yBA/BJ,EAgCI,6EAhCJ,EAkCGA,OAlCH,CAmCI,kCAnCJ,EAoCI,sCApCJ,EAsCGA,OAtCH,CAuCI,yBAvCJ,EAwCI,yCAxCJ,EA0CGA,OA1CH,CA2CI,qCA3CJ,EA4CI,oEA5CJ,EA8CGA,OA9CH,CA+CI,+BA/CJ,EAgDI,8EAhDJ,CAHA,EAsDDJ,OAtDC,CAsDO,cAtDP,EAsDuB,KAtDvB,EAsD8BF,KAAK,IACnCA,KAAK,CACFE,OADH,CAEI,gBAFJ,EAGI,+BAHJ,EAIIR,kBAJJ,EAMGQ,OANH,CAOI,oBAPJ,EAQI,mCARJ,EASIR,kBATJ,EAWGQ,OAXH,CAWW,KAXX,EAWkB,eAXlB,EAWmCR,kBAXnC,EAYGS,aAZH,CAYiB,CAZjB,EAaGG,OAbH,CAcI,kBAdJ,EAeI,iDAfJ,EAiBGA,OAjBH,CAkBI,qBAlBJ,EAmBI,6EAnBJ,EAqBGA,OArBH,CAqBW,qBArBX,EAqBkC,yCArBlC,CAvDA,EA8EDH,aA9EC,CA8Ea,CA9Eb,EA+EDI,IA/EC,CA+EI,GA/EJ,EAgFDxB,KAhFC,CAgFK,GAhFL,EAgFU,MAhFV,EAiFDA,KAjFC,CAiFK,GAjFL,EAiFU,SAjFV,EAkFDyB,OAlFC,EALJ;;AAyFA,MAAMC,yBAAyB,GAAG;AAChC3B,EAAAA,OAAO,EAAE4B,OAAO,CAACX,IAAI,CAACjB,OAAN,CADgB;AAEhCK,EAAAA,OAAO,EAAEuB,OAAO,CAACX,IAAI,CAACZ,OAAN,CAFgB;AAGhCC,EAAAA,KAAK,EAAEsB,OAAO,CAACX,IAAI,CAACX,KAAN,CAHkB;AAIhCC,EAAAA,IAAI,EAAEqB,OAAO,CAACX,IAAI,CAACV,IAAN,CAJmB;AAKhCC,EAAAA,IAAI,EAAEoB,OAAO,CAACX,IAAI,CAACT,IAAN,CALmB;AAMhCC,EAAAA,KAAK,EAAEmB,OAAO,CAACX,IAAI,CAACR,KAAN,CANkB;AAOhCC,EAAAA,KAAK,EAAEkB,OAAO,CAACX,IAAI,CAACP,KAAN,CAPkB;AAQhCC,EAAAA,MAAM,EAAEiB,OAAO,CAACX,IAAI,CAACN,MAAN;AARiB,CAAlC;AAWA,MAAMkB,qBAAqB,GAAG;AAC5BvB,EAAAA,KAAK,EAAEsB,OAAO,CAACX,IAAI,CAACX,KAAN,CADc;AAE5BC,EAAAA,IAAI,EAAEqB,OAAO,CAACX,IAAI,CAACV,IAAN,CAFe;AAG5BE,EAAAA,KAAK,EAAEmB,OAAO,CAACX,IAAI,CAACR,KAAN;AAHc,CAA9B;;AAMA,IAAI;AACF,MAAIqB,YAAJ;;AACA,UAAQd,MAAR;AACE,SAAK,KAAL;AACEc,MAAAA,YAAY,GAAG,wBAAcb,IAAI,CAACc,KAAnB,CAAf;AACA;;AACF,SAAK,KAAL;AACED,MAAAA,YAAY,GAAG,yBAAe,GAAIb,IAAI,CAACe,IAAxB,CAAf;AACA;;AACF,SAAK,OAAL;AACEF,MAAAA,YAAY,GAAG,0BACb,GAAIb,IAAI,CAACgB,OAAN,CAA2BC,GAA3B,CACAC,KAAD,IAAmB,IAAIC,MAAJ,CAAWD,KAAX,EAAkB,IAAlB,CADlB,CADU,CAAf;AAKA;;AACF,SAAK,QAAL;AACEL,MAAAA,YAAY,GAAG,2BAAiB,GAAIb,IAAI,CAACoB,QAA1B,CAAf;AACA;;AACF,SAAK,KAAL;AACA;AAlBF;;AAoBA,QAAMC,OAAO,GAAG,mBAAS;AACvBvB,IAAAA,QAAQ,EAAEA,QADa;AAEvBwB,IAAAA,QAAQ,EACNxB,QAAQ,KAAK,SAAb,GACI,2BACEyB,oBADF,EAEEb,yBAFF,EAGEa,qBAAgBC,KAHlB,CADJ,GAMI,2BACEC,gBADF,EAEEb,qBAFF,EAGEa,iBAAYC,OAHd,CATiB;AAcvB3B,IAAAA,MAAM,EAAEc;AAde,GAAT,CAAhB;AAiBAQ,EAAAA,OAAO,CAACM,EAAR,CAAW,OAAX,EAAqBC,KAAD,IAAkB;AACpCC,IAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,6BAAYH,KAAZ,CAArB;AACD,GAFD;AAIAP,EAAAA,OAAO,CAACM,EAAR,CAAW,OAAX,EAAqBnC,KAAD,IAAkB;AACpCwC,IAAAA,SAAS,CAACxC,KAAD,CAAT;AACD,GAFD;AAGD,CA9CD,CA8CE,OAAOA,KAAP,EAAc;AACdwC,EAAAA,SAAS,CAACxC,KAAD,CAAT;AACD;;AAED,SAASwC,SAAT,CAAmBxC,KAAnB,EAA6C;AAC3C;AACAyC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAY1C,KAAZ,CAAZ;AACAqC,EAAAA,OAAO,CAACM,IAAR,CAAa,CAAb;AACD","sourcesContent":["import yargs from 'yargs';\nimport {\n  logkitty,\n  makeAppFilter,\n  makeTagsFilter,\n  makeMatchFilter,\n  makeCustomFilter,\n  FilterCreator,\n  AndroidPriority,\n  IosPriority,\n} from './api';\nimport { formatEntry, formatError } from './formatters';\nimport { CodeError } from './errors';\nimport { getMinPriority } from './utils';\nimport { Entry, Platform } from './types';\n\nconst androidPriorityOptions = {\n  unknown: {\n    alias: ['U', 'u'],\n    boolean: true,\n    default: false,\n    describe: 'Unknown priority',\n  },\n  verbose: {\n    alias: ['V', 'v'],\n    boolean: true,\n    default: false,\n    describe: 'Verbose priority',\n  },\n  debug: {\n    alias: ['D', 'd'],\n    boolean: true,\n    default: false,\n    describe: 'Debug priority',\n  },\n  info: {\n    alias: ['I', 'i'],\n    boolean: true,\n    default: false,\n    describe: 'Info priority',\n  },\n  warn: {\n    alias: ['W', 'w'],\n    boolean: true,\n    default: false,\n    describe: 'Warn priority',\n  },\n  error: {\n    alias: ['E', 'e'],\n    boolean: true,\n    default: false,\n    describe: 'Error priority',\n  },\n  fatal: {\n    alias: ['F', 'f'],\n    boolean: true,\n    default: false,\n    describe: 'Fatal priority',\n  },\n  silent: {\n    alias: ['S', 's'],\n    boolean: true,\n    default: false,\n    describe: 'Silent priority',\n  },\n};\n\nconst iosPriorityOptions = {\n  debug: {\n    alias: ['D', 'd'],\n    boolean: true,\n    default: false,\n    describe: 'Debug level',\n  },\n  info: {\n    alias: ['I', 'i'],\n    boolean: true,\n    default: false,\n    describe: 'Info level',\n  },\n  error: {\n    alias: ['E', 'e'],\n    boolean: true,\n    default: false,\n    describe: 'Error level',\n  },\n};\n\nconst {\n  argv: {\n    _: [platform, filter],\n    ...args\n  },\n} = yargs\n  .usage('Usage: $0 [options] <platform>')\n  .command('android', 'Android', yargs =>\n    yargs\n      .command(\n        'tag <tags ...>',\n        'Show logs matching given tags',\n        androidPriorityOptions\n      )\n      .command(\n        'app <appId>',\n        'Show logs from application with given identifier',\n        androidPriorityOptions\n      )\n      .command(\n        'match <regexes...>',\n        'Show logs matching given patterns',\n        androidPriorityOptions\n      )\n      .command(\n        'custom <patterns ...>',\n        'Filter using custom patterns <tag>:<priority>'\n      )\n      .command('all', 'Show all logs', androidPriorityOptions)\n      .demandCommand(1)\n      .option('adb-path', {\n        type: 'string',\n        describe: 'Use custom path to ADB',\n      })\n      .example(\n        '$0 android tag MyTag',\n        'Filter logs to only include ones with MyTag tag'\n      )\n      .example(\n        '$0 android tag MyTag -I',\n        'Filter logs to only include ones with MyTag tag and priority INFO and above'\n      )\n      .example(\n        '$0 android app com.example.myApp',\n        'Show all logs from com.example.myApp'\n      )\n      .example(\n        '$0 android match device',\n        'Show all logs matching /device/gm regex'\n      )\n      .example(\n        '$0 android app com.example.myApp -E',\n        'Show all logs from com.example.myApp with priority ERROR and above'\n      )\n      .example(\n        '$0 android custom *:S MyTag:D',\n        'Silence all logs and show only ones with MyTag with priority DEBUG and above'\n      )\n  )\n  .command('ios <filter>', 'ios', yargs =>\n    yargs\n      .command(\n        'tag <tags ...>',\n        'Show logs matching given tags',\n        iosPriorityOptions\n      )\n      .command(\n        'match <regexes...>',\n        'Show logs matching given patterns',\n        iosPriorityOptions\n      )\n      .command('all', 'Show all logs', iosPriorityOptions)\n      .demandCommand(1)\n      .example(\n        '$0 ios tag MyTag',\n        'Filter logs to only include ones with MyTag tag'\n      )\n      .example(\n        '$0 ios tag MyTag -i',\n        'Filter logs to only include ones with MyTag tag and priority Info and Error'\n      )\n      .example('$0 ios match device', 'Show all logs matching /device/gm regex')\n  )\n  .demandCommand(1)\n  .help('h')\n  .alias('h', 'help')\n  .alias('v', 'version')\n  .version();\n\nconst selectedAndroidPriorities = {\n  unknown: Boolean(args.unknown),\n  verbose: Boolean(args.verbose),\n  debug: Boolean(args.debug),\n  info: Boolean(args.info),\n  warn: Boolean(args.warn),\n  error: Boolean(args.error),\n  fatal: Boolean(args.fatal),\n  silent: Boolean(args.silent),\n};\n\nconst selectedIosPriorities = {\n  debug: Boolean(args.debug),\n  info: Boolean(args.info),\n  error: Boolean(args.error),\n};\n\ntry {\n  let createFilter: FilterCreator | undefined;\n  switch (filter) {\n    case 'app':\n      createFilter = makeAppFilter(args.appId as string);\n      break;\n    case 'tag':\n      createFilter = makeTagsFilter(...(args.tags as string[]));\n      break;\n    case 'match':\n      createFilter = makeMatchFilter(\n        ...(args.regexes as string[]).map(\n          (value: string) => new RegExp(value, 'gm')\n        )\n      );\n      break;\n    case 'custom':\n      createFilter = makeCustomFilter(...(args.patterns as string[]));\n      break;\n    case 'all':\n    default:\n  }\n  const emitter = logkitty({\n    platform: platform as Platform,\n    priority:\n      platform === 'android'\n        ? getMinPriority(\n            AndroidPriority,\n            selectedAndroidPriorities,\n            AndroidPriority.DEBUG\n          )\n        : getMinPriority(\n            IosPriority,\n            selectedIosPriorities,\n            IosPriority.DEFAULT\n          ),\n    filter: createFilter,\n  });\n\n  emitter.on('entry', (entry: Entry) => {\n    process.stdout.write(formatEntry(entry));\n  });\n\n  emitter.on('error', (error: Error) => {\n    terminate(error);\n  });\n} catch (error) {\n  terminate(error as Error | CodeError);\n}\n\nfunction terminate(error: CodeError | Error) {\n  // eslint-disable-next-line no-console\n  console.log(formatError(error));\n  process.exit(1);\n}\n"],"file":"cli.js"}