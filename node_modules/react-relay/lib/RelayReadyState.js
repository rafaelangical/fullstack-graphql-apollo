/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 */
'use strict';

var _objectSpread2 = require("@babel/runtime/helpers/interopRequireDefault")(require("@babel/runtime/helpers/objectSpread"));

var _toConsumableArray2 = require("@babel/runtime/helpers/interopRequireDefault")(require("@babel/runtime/helpers/toConsumableArray"));

/**
 * @internal
 */
var RelayReadyState =
/*#__PURE__*/
function () {
  function RelayReadyState(onReadyStateChange) {
    this._onReadyStateChange = onReadyStateChange;
    this._readyState = {
      aborted: false,
      done: false,
      error: null,
      events: [],
      ready: false,
      stale: false
    };
    this._scheduled = false;
  }

  var _proto = RelayReadyState.prototype;

  _proto.update = function update(nextReadyState, newEvents) {
    var prevReadyState = this._readyState;

    if (prevReadyState.aborted) {
      return;
    }

    if (prevReadyState.done || prevReadyState.error) {
      if (nextReadyState.stale) {
        if (prevReadyState.error) {
          this._mergeState(nextReadyState, newEvents);
        } // Do nothing if stale data comes after server data.

      } else if (!nextReadyState.aborted) {
        process.env.NODE_ENV !== "production" ? require("fbjs/lib/warning")(false, 'RelayReadyState: Invalid state change from `%s` to `%s`.', JSON.stringify(prevReadyState), JSON.stringify(nextReadyState)) : void 0;
      }

      return;
    }

    this._mergeState(nextReadyState, newEvents);
  };

  _proto._mergeState = function _mergeState(nextReadyState, newEvents) {
    var _this = this;

    this._readyState = (0, _objectSpread2["default"])({}, this._readyState, nextReadyState, {
      events: newEvents && newEvents.length ? (0, _toConsumableArray2["default"])(this._readyState.events).concat((0, _toConsumableArray2["default"])(newEvents)) : this._readyState.events
    });

    if (this._scheduled) {
      return;
    }

    this._scheduled = true;

    require("fbjs/lib/resolveImmediate")(function () {
      _this._scheduled = false;

      _this._onReadyStateChange(_this._readyState);
    });
  };

  return RelayReadyState;
}();

module.exports = RelayReadyState;